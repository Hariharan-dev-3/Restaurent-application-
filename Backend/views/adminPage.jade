doctype html
html
  head
    title Restaurent
    link(rel="stylesheet", href="/static/profile/css/adminPage.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css", integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr", crossorigin="anonymous")
  body
    include ./navbar.jade


    section.tableContainer
      table
        thead
          tr
            th UserName
            th Email
            th Password
            th Role
            th Action
        tbody
          each user in users
            tr
              td= user.userName
              td= user.userEmail
              td= user.userPassword.slice(0,5) + '...'
              td= user.userRole
              td 
                button(onclick=`deleteUser("${user.userId}")`) Delete
                |  
                button(onclick=`showPopup("${user.userId}", "${user.userName}","${user.userRole}")`) Update

    div#popupContainer(style="display: none")
      h3 Update User

      label(for="userIdInput") User ID:
      input#userIdInput(type="text", readonly=true)

      label(for="userNameInput") User Name:
      input#userNameInput(type="text")

      label(for="userRoleInput") User Role:
      input#userRoleInput(type="text")

      button(onclick="submitCredentials()") Submit
      button(onclick="hidePopup()") Cancel

    script.
      function deleteUser(id) {
        if (confirm("Are you sure you want to delete this user?")) {
          fetch('/api/v1/user/deleteUser/' + id, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(res => res.json())
          .then(data => {
            alert(data.message);
            location.reload();
          })
          .catch(err => {
            console.error("Delete failed:", err);
            alert("Something went wrong.");
          });
        }
      }

      function showPopup(id, name , role) {
        document.getElementById("popupContainer").style.display = "block";
        document.getElementById("userIdInput").value = id;
        document.getElementById("userNameInput").value = name;
        document.getElementById("userRoleInput").value = role ;
      }

      function hidePopup() {
        document.getElementById("popupContainer").style.display = "none";
      }

      function submitCredentials() {
        const id = document.getElementById("userIdInput").value;
        const userName = document.getElementById("userNameInput").value;
        const userRole = document.getElementById("userRoleInput").value;

        fetch(`/api/v1/user/updateUser/${id}/${userName}/${userRole}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(res => res.json())
        .then(data => {
          alert(data.message);
          hidePopup();
          location.reload();
        })
        .catch(err => {
          console.error("Submission failed:", err);
          alert("Something went wrong.");
        });
      }